{
  "include": [
    "**/*.ts",
    "**/*.tsx",

    // Including this file makes the root of `dist` no longer "only contains other directories",
    // and that would prevent `tsc` from flattening the `dist` directory down to the `src`
    // directory.
    // This way the `dist` directory can always have consistent structure no matter what other
    // files are added/removed in the future.
    // Because it's important for `dist` to have a consistent directory structure.
    // Because that's important.
    // It just is.
    "tsconfig.json"
  ],
  "exclude": ["test", "build", "node_modules"],
  "compilerOptions": {
    "allowJs": true,
    "allowSyntheticDefaultImports": true,
    "baseUrl": ".",
    "composite": false,
    "declaration": true,
    "declarationMap": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "incremental": true,
    "inlineSources": false,
    "isolatedModules": true,
    "jsx": "react",
    "lib": ["esnext"],
    "module": "esnext",
    "moduleResolution": "node",
    "noEmit": false,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": true,
    "outDir": "dist",
    "paths": {
      "~src/*": ["src/*"],
      "~test/*": ["test/*"],
      "~type/*": ["type/*"]
    },
    "preserveWatchOutput": true,
    "removeComments": true,
    "resolveJsonModule": true,
    "skipLibCheck": true,
    "sourceMap": true,
    "strict": true,
    "strictBindCallApply": true,
    "strictNullChecks": true,
    "target": "es5",
    "typeRoots": ["./type", "./node_modules/@types"],
    "types": ["node"]
  },
  "tsc-alias": {
    "resolveFullPaths": true
  }
}
