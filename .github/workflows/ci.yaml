name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        id: cache-working-directory
        with:
          path: '.'
          key: ${{ github.event_name }}-${{ github.sha }}-${{ runner.os }}-working-directory
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm clean-install

  linter:
    needs: [ setup ]
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        id: cache-working-directory
        with:
          path: '.'
          key: ${{ github.event_name }}-${{ github.sha }}-${{ runner.os }}-working-directory
      - uses: actions/checkout@v4
        if: steps.cache-working-directory.outputs.cache-hit != 'true'
      - name: Install dependencies
        if: steps.cache-working-directory.outputs.cache-hit != 'true'
        run: npm clean-install
      - name: Run linter
        run: npm run test:lint

  type-check:
    needs: [ setup ]
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        id: cache-working-directory
        with:
          path: '.'
          key: ${{ github.event_name }}-${{ github.sha }}-${{ runner.os }}-working-directory
      - uses: actions/checkout@v4
        if: steps.cache-working-directory.outputs.cache-hit != 'true'
      - name: Install dependencies
        if: steps.cache-working-directory.outputs.cache-hit != 'true'
        run: npm clean-install
      - name: Run type check
        run: npm run test:tsc

  unit-tests:
    needs: [ setup ]
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        id: cache-working-directory
        with:
          path: '.'
          key: ${{ github.event_name }}-${{ github.sha }}-${{ runner.os }}-working-directory
      - uses: actions/checkout@v4
        if: steps.cache-working-directory.outputs.cache-hit != 'true'
      - name: Install dependencies
        if: steps.cache-working-directory.outputs.cache-hit != 'true'
        run: npm clean-install
      - name: Run unit tests
        run: npm run test:unit

  compile-bundle:
    name: Compile Bundle from Source
    needs: [ linter, type-check, unit-tests ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        id: cache-working-directory
        with:
          path: '.'
          key: ${{ github.event_name }}-${{ github.sha }}-${{ runner.os }}-working-directory
      - uses: actions/checkout@v4
        if: steps.cache-working-directory.outputs.cache-hit != 'true'
      - name: Install dependencies
        if: steps.cache-working-directory.outputs.cache-hit != 'true'
        run: npm clean-install
      - uses: actions/cache@v4
        id: cache-working-directory-with-bundle
        with:
          path: '.'
          key: ${{ github.event_name }}-${{ github.sha }}-${{ runner.os }}-working-directory-with-bundle
      - name: Clean working directory
        run: |
          npm run clean
          npm run build:rollup

  linux-binary:
    name: Build Native Linux Binary
    needs: [ compile-bundle ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: actions/cache@v4
        id: cache-working-directory-with-bundle
        with:
          path: '.'
          key: ${{ github.event_name }}-${{ github.sha }}-${{ runner.os }}-working-directory-with-bundle
      - uses: actions/checkout@v4
        if: steps.cache-working-directory.outputs.cache-hit != 'true'
      - name: Install dependencies
        if: steps.cache-working-directory.outputs.cache-hit != 'true'
        run: npm clean-install
      - name: Compile with Rollup
        if: steps.cache-working-directory.outputs.cache-hit != 'true'
        run: |
          npm run clean
          npm run build:rollup
      - name: Build native binary
        run: npm run build:nexe:linux
